@charset "UTF-8";
/* fix too small font-size in both Chrome & Firefox */
* {
  font: inherit;
}

.wrap {
  display: -ms-grid;
  display: grid;
  -ms-grid-rows: (-webkit-max-content)[2] 1em;
  -ms-grid-rows: (max-content)[2] 1em;
  -ms-grid-columns: 1fr 1fr;
      grid-template: repeat(2, -webkit-max-content) 1em/1fr 1fr;
      grid-template: repeat(2, max-content) 1em/1fr 1fr;
  overflow: hidden;
  position: relative;
  margin: 1em auto;
  max-width: 20em;
  background: -webkit-gradient(linear, left bottom, left top, color-stop(1em, #ccc), color-stop(0, transparent));
  background: linear-gradient(0deg, #ccc 1em, transparent 0);
  font-family: ubuntu mono, consolas, monaco, monospace;
}

[id=multi-lbl] {
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1/span 2;
}

.sr-only {
  position: absolute;
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
}

input[type=range] {
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1/span 2;
  -ms-grid-row: 3;
  grid-row: 3;
  z-index: 1;
  top: 0;
  left: 0;
  margin: 0;
  background: none;
  /* get rid of white Chrome background */
  color: #000;
  pointer-events: none;
}
input[type=range]::-webkit-slider-runnable-track, input[type=range]::-webkit-slider-thumb, input[type=range] {
  -webkit-appearance: none;
}
input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 100%;
  background: none;
}
input[type=range]::-moz-range-track {
  width: 100%;
  height: 100%;
  background: none;
}
input[type=range]::-webkit-slider-thumb {
  border: none;
  /* get rid of Firefox thumb border */
  width: 1em;
  height: 1em;
  border-radius: 0;
  /* get rid of Firefox corner rounding */
  background: currentcolor;
  pointer-events: auto;
}
input[type=range]::-moz-range-thumb {
  border: none;
  /* get rid of Firefox thumb border */
  width: 1em;
  height: 1em;
  border-radius: 0;
  /* get rid of Firefox corner rounding */
  background: currentcolor;
  pointer-events: auto;
}
input[type=range]:focus {
  z-index: 2;
}
input[type=range]:focus, input[type=range]:focus + output {
  color: darkorange;
}

output {
  -ms-grid-row: 2;
  grid-row: 2;
}
output:last-child {
  text-align: right;
}
output::after {
  counter-reset: c var(--c);
  content: "Цена " attr(for) ": " counter(c) ";";
}